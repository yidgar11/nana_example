apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
  labels:
    # you can give any k8s component a label (key/value)
    app: webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      # identify a set of resoures with same label
      app: webapp
  # the template is the configuration for the pod
  # it configures the pod in the deployment 
  template:
    metadata:
      labels:
        # for pods , the label is MUST 
        app: webapp
    spec:
      # you can have multiple containers in a pod 
      # in it we define which image  will be used to 
      # create this pod and the port 
      # in our case we will use the nana mongodb imgae downloaded fron 
      # https://hub.docker.com/r/nanajanashia/k8s-demo-app (search which tag yo want to use) 
      containers: 
      - name: webapp
        image: nanajanashia/k8s-demo-app:v1.0
        ports:
        - containerPort: 3000
        ## Add here variables 
        env:
        - name: USER_NAME
          # this is copied from the mongo.yaml , from MONGO_INITDB_ROOT_USERNAME 
          valueFrom: 
              secretKeyRef: 
                # we take from mongo-secret.yaml
                name: mongo-secret
                key: mongo-user 
        - name: USER_PWD
          valueFrom: 
            secretKeyRef: 
              name: mongo-secret
              key: mongo-password 
        - name: DB_URL
        ### this value is taken from the configmap 
          valueFrom:
            configMapKeyRef: 
              name: mongo-config
              key: mongo-url


---

apiVersion: v1
kind: Service
metadata:
  # the name is same as we defined in mongo-config (mongo-utl:)
  name: webapp-service
spec:
  # the default type is ClisterIP , which is an internal Service 
  # We will change it to NodePort 
  type: NodePort 
  selector:
    # service forward the request to the pods 
    # so this value should be similar to the label of the pods above 
    app: webapp
  ports:
    - protocol: TCP
      # we can select any port 80,8080 but its usually set to the target port below 
      port: 3000
      # this is the port of the Pods 
      # it should be similar to the containerPort: above 
      targetPort: 3000
      # since we change to NodePort , we need to add the nodePort var below 
      # it exposed the Service on each Node's IP at a static port 
      # it must be between 30000 to 32767 
      nodePort: 30111

